---
import type { CollectionEntry } from 'astro:content'
import { Icon } from 'astro-icon/components'

import StackCard from '@/components/StackCard.astro'
import type { TechStack } from '@/types'
import { getStack } from '@/lib/utils'

interface Props {
	entry: CollectionEntry<'project'>
	t: (key: string) => string
}

const { entry, t } = Astro.props
const { name, stack, url, github, logo, invert = false } = entry.data
const { Content } = await entry.render()

const techStack = getStack(stack)
---

<div
	class='border z-50 bg-white/75 dark:bg-black/75 border-primary/15 dark:border-white/20 w-full hover:shadow-lg transition-all duration-200 my-4 rounded-xl p-5 shadow-md'
>
	<div class='card-body grid grid-cols-4'>
		<div class='grid col-span-4'>
			<div class='grid grid-cols-3 gap-4 mb-2 justify-between items-center'>
				<div class='grid col-span-3'>
					<div class='flex flex-row items-center'>
						{
							!!logo && (
								<svg
									height='5rem'
									width='5rem'
									class={`mr-5 ${invert && 'dark:invert'}`}>
									<use href={logo} />
								</svg>
							)
						}
						<h1
							class='uppercase card-title font-extrabold tracking-tighter md:text-2xl'
						>
							{name}
						</h1>
					</div>
				</div>
				<div class='col-start-4 col-span-1'>
					{
						!!github && (
							<a
								href={github}
								target='_blank'
								aria-label={`${name} on GitHub`}
								class='w-fit px-3 py-2 group rounded border flex gap-2 items-center border-neutral-200 dark:border-neutral-700 hover:bg-neutral-100 hover:dark:bg-neutral-800 blend'>
								<div class='text-sm flex'>
									GitHub
									<svg class='ml-2 size-5 fill-current hover:fill-black hover:dark:fill-white blend'>
										<use href={`/social.svg#github`} />
									</svg>
									<svg
										xmlns='http://www.w3.org/2000/svg'
										width='20'
										height='20'
										viewBox='0 0 24 24'
										fill='none'
										stroke-width='2.5'
										stroke-linecap='round'
										stroke-linejoin='round'
										class='stroke-current group-hover:stroke-black group-hover:dark:stroke-white'>
										<line
											x1='5'
											y1='12'
											x2='19'
											y2='12'
											class='scale-x-0 group-hover:scale-x-100 translate-x-4 group-hover:translate-x-1 transition-all duration-300 ease-in-out'
										/>
										<polyline
											points='12 5 19 12 12 19'
											class='translate-x-0 group-hover:translate-x-1 transition-all duration-300 ease-in-out'
										/>
									</svg>
								</div>
							</a>
						)
					}
				</div>
			</div>
			<div class='grid grid-cols-1 gap-5 place-items-center'>
				<div class='self-start grid-cols-1 justify-self-start text-left'>
					<article>
						<Content />
					</article>
					{
						Array.isArray(stack) && (
							<div class='space-y-4'>
								<p class='font-semibold text-black dark:text-white'>
									{t('project.developed-with')}
								</p>
								<div class='flex flex-row justify-between'>
									<div class='flex flex-wrap content-around gap-2 my-4'>
										{techStack.map((item: TechStack) => (
											<StackCard
												text={item.NAME}
												icon={item.ICON}
												href={item.HREF}
											/>
										))}
									</div>
									<p class='flex font-semibold text-black dark:text-white'>
										{!!url && (
											<a
												href={url}
												target='_blank'
												class='cursor-pointer link link-hover text-sm text-right flex justify-center items-center my-5'>
												{'Visit '}
												{url !== '#' && (
													<Icon
														name='carbon:link'
														class='w-4 h-4 ml-2'
													/>
												)}
											</a>
										)}
									</p>
								</div>
							</div>
						)
					}
				</div>
			</div>
		</div>
	</div>
</div>
